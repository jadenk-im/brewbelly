{"ast":null,"code":"var _jsxFileName = \"/Users/jadenkim/Desktop/brewbelly.fm/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { HomePage, BrewPage, BrewsPage } from './pages';\nimport firebase from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [brews, setBrews] = useState([]);\n  const [latestPlaylistId, setLatestPlaylistId] = '';\n  const [latestName, setLatestName] = '';\n  const [latestColor, setLatestColor] = '#ffffff';\n  const [loading, setLoading] = useState(false);\n  const YOUTUBE_API_KEY = 'AIzaSyA8NmqtBGCc12OcuVhZUDNhzTYbagkoHTk';\n  const db = firebase.firestore();\n  const brewsRef = db.collection(\"brews\");\n  const getBrews = () => {\n    setLoading(true);\n    let newBrews = [];\n    brewsRef.get().then(querySnapshot => {\n      // Sort the documents by date in descending order\n      const sortedDocs = querySnapshot.docs.sort((a, b) => {\n        return b.data().date - a.data().date;\n      });\n      sortedDocs.forEach(doc => {\n        const playlistId = doc.data().playlistId;\n        const name = doc.data().name;\n        const color = doc.data().color;\n        const brew = {\n          playlistId: playlistId,\n          name: name,\n          color: color\n        };\n        newBrews.append(brew);\n      });\n      setBrews(newBrews);\n\n      // Get the data from the latest document\n      const latestBrew = sortedDocs[0].data();\n\n      // Use the latestPlaylist data as needed\n      setLatestPlaylistId(latestBrew.data().playlistId);\n      setLatestName(latestBrew.data().name);\n      setLatestColor(latestBrew.data().color);\n    });\n    setLoading(false);\n  };\n  useEffect(() => {\n    getBrews();\n  });\n  if (loading) /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {\n          playlistId: latestPlaylistId,\n          name: latestName,\n          color: latestColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:brew\",\n        element: /*#__PURE__*/_jsxDEV(BrewPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:brews\",\n        element: /*#__PURE__*/_jsxDEV(BrewsPage, {\n          brews: brews\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LS2EDg+v3it0sLzFFJ4jq+husXc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","HomePage","BrewPage","BrewsPage","firebase","jsxDEV","_jsxDEV","App","_s","brews","setBrews","latestPlaylistId","setLatestPlaylistId","latestName","setLatestName","latestColor","setLatestColor","loading","setLoading","YOUTUBE_API_KEY","db","firestore","brewsRef","collection","getBrews","newBrews","get","then","querySnapshot","sortedDocs","docs","sort","a","b","data","date","forEach","doc","playlistId","name","color","brew","append","latestBrew","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/jadenkim/Desktop/brewbelly.fm/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { HomePage, BrewPage, BrewsPage } from './pages'\nimport firebase from './firebase'\n\nconst App = () => {\n  const [brews, setBrews] = useState([])\n  const [latestPlaylistId, setLatestPlaylistId] = ('')\n  const [latestName, setLatestName] = ('')\n  const [latestColor, setLatestColor] = ('#ffffff')\n  const [loading, setLoading] = useState(false)\n\n  const YOUTUBE_API_KEY = 'AIzaSyA8NmqtBGCc12OcuVhZUDNhzTYbagkoHTk'\n\n  const db = firebase.firestore()\n  const brewsRef = db.collection(\"brews\")\n\n  const getBrews = () => {\n    setLoading(true)\n\n    let newBrews = [];\n\n    brewsRef.get().then((querySnapshot) => {\n      // Sort the documents by date in descending order\n      const sortedDocs = querySnapshot.docs.sort((a, b) => {\n        return b.data().date - a.data().date;\n      })\n\n      sortedDocs.forEach(doc => {\n        const playlistId = doc.data().playlistId\n        const name = doc.data().name\n        const color = doc.data().color\n        const brew = {\n          playlistId: playlistId,\n          name: name,\n          color: color,\n        }\n\n        newBrews.append(brew)\n      })\n\n      setBrews(newBrews)\n\n      // Get the data from the latest document\n      const latestBrew = sortedDocs[0].data()\n\n      // Use the latestPlaylist data as needed\n      setLatestPlaylistId(latestBrew.data().playlistId)\n      setLatestName(latestBrew.data().name)\n      setLatestColor(latestBrew.data().color)\n    })\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getBrews()\n  })\n\n  if (loading) <h1>Loading...</h1>\n\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={<HomePage playlistId={latestPlaylistId} name={latestName} color={latestColor} />} />\n        <Route path='/:brew' element={<BrewPage />} />\n        <Route path='/:brews' element={<BrewsPage brews={brews} />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}