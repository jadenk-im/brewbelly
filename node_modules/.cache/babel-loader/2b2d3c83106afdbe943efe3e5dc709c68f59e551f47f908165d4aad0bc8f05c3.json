{"ast":null,"code":"import _slicedToArray from\"/Users/jadenkim/git/work/brewbelly/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{HomePage,BrewPage,BrewsPage}from'./pages';import firebase from'./firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),brews=_useState2[0],setBrews=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),latestPlaylistId=_useState4[0],setLatestPlaylistId=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),latestName=_useState6[0],setLatestName=_useState6[1];var _useState7=useState('#ffffff'),_useState8=_slicedToArray(_useState7,2),latestColor=_useState8[0],setLatestColor=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var db=firebase.firestore();var brewsRef=db.collection(\"brews\");var getBrews=function getBrews(){setLoading(true);var newBrews=[];brewsRef.get().then(function(querySnapshot){// Sort the documents by date in descending order\nvar sortedDocs=querySnapshot.docs.sort(function(a,b){return b.data().date-a.data().date;});sortedDocs.forEach(function(doc){var playlistId=doc.data().playlistId;var name=doc.data().name;var color=doc.data().color;var brew={playlistId:playlistId,name:name,color:color};newBrews.push(brew);});setBrews(newBrews);// Get the data from the latest document\nvar latestBrew=sortedDocs[0].data();// Use the latestPlaylist data as needed\nsetLatestPlaylistId(latestBrew.playlistId);setLatestName(latestBrew.name);setLatestColor(latestBrew.color);});setLoading(false);};useEffect(function(){getBrews();});if(loading)/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"});return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{playlistId:latestPlaylistId,name:latestName,color:latestColor})}),/*#__PURE__*/_jsx(Route,{path:\"brews\",element:/*#__PURE__*/_jsx(BrewsPage,{brews:brews})}),/*#__PURE__*/_jsx(Route,{path:\"brews/:name\",element:/*#__PURE__*/_jsx(BrewPage,{})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","HomePage","BrewPage","BrewsPage","firebase","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","brews","setBrews","_useState3","_useState4","latestPlaylistId","setLatestPlaylistId","_useState5","_useState6","latestName","setLatestName","_useState7","_useState8","latestColor","setLatestColor","_useState9","_useState10","loading","setLoading","db","firestore","brewsRef","collection","getBrews","newBrews","get","then","querySnapshot","sortedDocs","docs","sort","a","b","data","date","forEach","doc","playlistId","name","color","brew","push","latestBrew","children","path","element"],"sources":["/Users/jadenkim/git/work/brewbelly/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { HomePage, BrewPage, BrewsPage } from './pages'\nimport firebase from './firebase'\n\nconst App = () => {\n  const [brews, setBrews] = useState([])\n  const [latestPlaylistId, setLatestPlaylistId] = useState('')\n  const [latestName, setLatestName] = useState('')\n  const [latestColor, setLatestColor] = useState('#ffffff')\n  const [loading, setLoading] = useState(false)\n\n  const db = firebase.firestore()\n  const brewsRef = db.collection(\"brews\")\n\n  const getBrews = () => {\n    setLoading(true)\n\n    let newBrews = [];\n\n    brewsRef.get().then((querySnapshot) => {\n      // Sort the documents by date in descending order\n      const sortedDocs = querySnapshot.docs.sort((a, b) => {\n        return b.data().date - a.data().date;\n      })\n\n      sortedDocs.forEach(doc => {\n        const playlistId = doc.data().playlistId\n        const name = doc.data().name\n        const color = doc.data().color\n        const brew = {\n          playlistId: playlistId,\n          name: name,\n          color: color,\n        }\n\n        newBrews.push(brew)\n      })\n\n      setBrews(newBrews)\n\n      // Get the data from the latest document\n      const latestBrew = sortedDocs[0].data()\n\n      // Use the latestPlaylist data as needed\n      setLatestPlaylistId(latestBrew.playlistId)\n      setLatestName(latestBrew.name)\n      setLatestColor(latestBrew.color)\n    })\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getBrews()\n  })\n\n  if (loading) <h1>Loading...</h1>\n\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={<HomePage playlistId={latestPlaylistId} name={latestName} color={latestColor} />} />\n        <Route path='brews' element={<BrewsPage brews={brews} />} />\n        <Route path='brews/:name' element={<BrewPage />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}